#! /usr/bin/env perl

use strict;
use Carp;
use File::Temp qw/tempfile tempdir/;
use Getopt::Long;

my $usage = "Usage: $0 [-n num_processors] [-t num_threads_per_job] [--dry] walltime dir\n\n";

my ($help, $dry, $nproc, $nthread, $tmpdir);

GetOptions("h|help" => \$help,
           "dry"    => \$dry,
           "n|np=i" => \$nproc,
           "t|nt=i" => \$nthread,
	  ) or die("Error in command line arguments\n");

$help and die $usage;

my $wall = shift @ARGV or die $usage;
my $dir  = shift @ARGV or die $usage;

verify_dir($dir);

my $cores_per_node = 24;

my @cmds = map { chomp; $_ } <STDIN>;

# print join("\n", @cmds) . "\n";

my $jobs_per_node = int($cores_per_node / $nthread);

my $i = 0;
while (@cmds && (!$nproc || $i < $nproc)) {
    $i++;
    my $jobfile = "$dir/node_p$i.sh";
    open(F, ">$jobfile") or die "Could not open $jobfile";
    print F "#!/bin/bash\n\n";

    for (my $j = 0; $j < $jobs_per_node; $j++) {
        my $cmd = shift @cmds or last;
        print F "$cmd &\n";
    }

    print F "\nwait\n";
    close(F);
    run("chmod a+x $jobfile");
}

my $pbs = "$dir/job.pbs";
open(F, ">$pbs") or die "Could not open $pbs";

close(F);


sub verify_dir { run("mkdir -p $_[0]"); }

sub run { system(@_) == 0 or confess("FAILED: ". join(" ", @_)); }
